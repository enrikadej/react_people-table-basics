{"version":3,"sources":["components/HomePage/HomePage.tsx","api/getPeopleAPI.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["HomePage","getPeopleFromServer","a","fetch","promise","json","peopleServer","PersonRow","person","name","sex","born","died","motherName","fatherName","PeopleTable","people","className","map","slug","PeoplePage","useState","setPeople","useEffect","then","response","humans","newPeople","human","mother","find","father","NotFoundPage","App","to","isActive","undefined","path","element","ReactDOM","render","document","getElementById"],"mappings":"mOAAaA,EAAW,kBACtB,4C,6CCEWC,EAAmB,uCAAG,8BAAAC,EAAA,sEACXC,MAHZ,qEAEuB,cAC3BC,EAD2B,gBAENA,EAAQC,OAFF,cAE3BC,EAF2B,yBAI1BA,GAJ0B,2CAAH,qDCCnBC,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxC,qCACE,6BAAKA,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,YAAc,QAC1B,6BAAKL,EAAOM,YAAc,YCLjBC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBACEC,UAAU,+CADZ,UAOE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAGJ,gCACGD,EAAOE,KAAI,SAAAV,GAAM,OAChB,6BACE,cAAC,EAAD,CAAWA,OAAQA,KADZA,EAAOW,eCHbC,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOL,EAAP,KAAeM,EAAf,KAEAC,qBAAU,WACRtB,IACGuB,MAAK,SAAAC,GACJH,EAAUG,QAEb,IAEH,IA9BkBC,EA8BZC,GA9BYD,EA8BWV,GA7BJE,KAAI,SAAAU,GAC3B,IAAMC,EAASH,EAAOI,MAAK,SAAAtB,GACzB,OAAOA,EAAOC,OAASmB,EAAMf,eACzB,KAEAkB,EAASL,EAAOI,MAAK,SAAAtB,GACzB,OAAOA,EAAOC,OAASmB,EAAMd,eACzB,KAEN,OAAO,YAAC,eACHc,GADL,IAEEC,SACAE,cAmBJ,OACE,cAAC,EAAD,CAAaf,OAAQW,KCrCZK,EAAe,kBAC1B,uDC0CaC,EA9BH,kBACV,sBAAKhB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CACEiB,GAAG,IACHjB,UAAW,SAAAkB,GAAQ,kCAAyBA,EAAW,kBAAeC,IAFxE,kBAMC,IACD,cAAC,IAAD,CACEF,GAAG,UACHjB,UAAW,SAAAkB,GAAQ,kCAAyBA,EAAW,kBAAeC,IAFxE,uBAQF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUJ,GAAG,QAE1C,cAAC,IAAD,CAAOG,KAAK,UAAUC,QAAS,cAAC,EAAD,MAE/B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,aChC/BC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.65ecc7b7.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1>HOME PAGE</h1>\n);\n","// eslint-disable-next-line max-len\nconst URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const getPeopleFromServer = async () => {\n  const promise = await fetch(URL);\n  const peopleServer = await promise.json();\n\n  return peopleServer;\n};\n","type Props = {\n  person: PersonWithParents\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => (\n  <>\n    <td>{person.name}</td>\n    <td>{person.sex}</td>\n    <td>{person.born}</td>\n    <td>{person.died}</td>\n    <td>{person.motherName || '---'}</td>\n    <td>{person.fatherName || '---'}</td>\n  </>\n);\n","import { PersonRow } from '../PersonRow';\n\ntype Props = {\n  people: PersonWithParents[]\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      className=\"\n        table\n        is-fullwidth\n        is-hoverable\n        is-bordered\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <tr key={person.slug}>\n            <PersonRow person={person} />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { getPeopleFromServer } from '../../api/getPeopleAPI';\nimport { PeopleTable } from '../PeopleTable';\n\nconst addParents = (humans: Person[]): PersonWithParents[] => {\n  const newHumans = humans.map(human => {\n    const mother = humans.find(person => {\n      return person.name === human.motherName;\n    }) || null;\n\n    const father = humans.find(person => {\n      return person.name === human.fatherName;\n    }) || null;\n\n    return ({\n      ...human,\n      mother,\n      father,\n    });\n  });\n\n  return newHumans;\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeopleFromServer()\n      .then(response => {\n        setPeople(response);\n      });\n  }, []);\n\n  const newPeople = addParents(people);\n\n  return (\n    <PeopleTable people={newPeople} />\n  );\n};\n","export const NotFoundPage = () => (\n  <h1>\n    404, page not found.\n  </h1>\n);\n","import './App.scss';\n\nimport {\n  NavLink,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NotFoundPage } from './components/NotFoundPage';\n\nconst App = () => (\n  <div className=\"App\">\n    <h1 className=\"title\">People table</h1>\n    <div className=\"block\">\n      <NavLink\n        to=\"/\"\n        className={isActive => `button is-primary ${isActive ? 'activeLink' : undefined}`}\n      >\n        Home\n      </NavLink>\n      {' '}\n      <NavLink\n        to=\"/people\"\n        className={isActive => `button is-primary ${isActive ? 'activeLink' : undefined}`}\n      >\n        People\n      </NavLink>\n    </div>\n\n    <Routes>\n      <Route path=\"/\" element={<HomePage />} />\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n\n      <Route path=\"/people\" element={<PeoplePage />} />\n\n      <Route path=\"*\" element={<NotFoundPage />} />\n    </Routes>\n  </div>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport { BrowserRouter as HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}